#!/bin/sh

# Initializing some options
debug="false"

# Find the OS
OS=$(uname)
echo Operating system: $OS

# Reading options
supported_short_options="gh"
supported_long_options="help,debug"

options=$(getopt -s sh -l $supported_long_options $supported_short_options $@)
if [ $? = 1 ]   # unsupported options
then
    echo "Try the --help option for more information"
    exit 1
fi

for opt in $options
do
    case $opt in
        -g | --debug)   debug="true";;
        -h | --help)    echo "Usage: configure [options]\n\n -g, --debug\tEnable debugging\n -h, --help\tDisplay this usage guide"
            exit 0;;
        --) break;;
    esac
done

echo "*************************"
echo "* Checking softwares... *"
echo "*************************" 

# Needed softwares
if [ $OS = "Linux" ]
then
	softs="pkg-config g++ moc-qt4 qmake lupdate lrelease make"
elif [ $OS = "Darwin" ]
then
	softs="pkg-config g++ moc qmake lupdate lrelease make"
fi

for soft in $softs
do
    path=$(which $soft)
    if [ $? = 1 ]
    then
        echo $soft missing !
        exit
    else
        echo $soft: $path        
    fi
done
echo 

echo "*********************************"
echo "* Checking development files... *"
echo "*********************************"

# Needed headers

if [ $OS = "Linux" ]
then
	inc_path="/usr/include/"
elif [ $OS = "Darwin" ]
then
	inc_path="/opt/local/include/"
fi

# libXML++
echo
xml_devs="libxml++"
xml_dev_path=$(ls -l $inc_path | grep -o -e "libxml++-[0-9]\{1,\}\.[0-9]\{1,\}" | head -n 1)

for dev in $xml_devs
do
    if [ -e "$inc_path$xml_dev_path/libxml++/$dev.h" ]
    then
        echo $dev.h: OK
    else
        echo $dev.h missing !
        exit
    fi
done

# SDL
echo
sdl_devs="SDL_mixer SDL_sound"
sdl_dev_path=$inc_path"SDL"

for dev in $sdl_devs
do
    if [ -e "$sdl_dev_path/$dev.h" ]
    then
        echo $dev.h: OK
    else
        echo $dev.h missing !
        exit
    fi
done

echo
echo "********************************"
echo "* Preparing the compilation... *"
echo "********************************"

qmake -project
lupdate GM-Assistant.pro
lrelease GM-Assistant.pro
mv translations/*.qm .
qmake

# adding the -g flag if the debug option is enabled
if [ $debug = "true" ]
then
    sed -i  "s#-pipe#-pipe -g#" Makefile
fi

# cleaning previous compilation
make -s clean

echo
echo "************************"
echo "* Adding librairies... *"
echo "************************"

# adding libxml++ and SDL includes in the Makefile
sed -i  "s#-I\.#$(pkg-config $xml_dev_path --cflags-only-I) $(pkg-config sdl --cflags-only-I)#" Makefile

# adding libxml++ and SDL binaries
if [ $OS = "Linux" ]
then
    sed -i  "s#-lQtCore#-lQtCore $(pkg-config $xml_dev_path --libs) -lSDL_mixer -lSDL_sound#" Makefile
elif [ $OS = "Darwin" ]
then
    sed -i  "s#-lQtCore#-lQtCore $(pkg-config $xml_dev_path --libs) -lSDL_mixer -lSDL_sound#" Makefile
fi

echo
echo "********************"
echo "* Ready to compile *"
echo "********************"
echo To compile, type make
