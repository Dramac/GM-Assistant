#!/bin/sh

# Initializing some options
debug="false"

# Find the OS
OS=$(uname)
echo Operating system: $OS

# Reading options
supported_short_options="gh"
supported_long_options="help,debug"

options=$(getopt -s sh -l $supported_long_options $supported_short_options $@)
if [ $? = 1 ]   # unsupported options
then
    echo "Try the --help option for more information"
    exit 1
fi

for opt in $options
do
    case $opt in
        -g | --debug)   debug="true";;
        -h | --help)    echo "Usage: configure [options]\n\n -g, --debug\tEnable debugging\n -h, --help\tDisplay this usage guide"
            exit 0;;
        --) break;;
    esac
done

echo "*************************"
echo "* Checking softwares... *"
echo "*************************" 

# Needed softwares
if [ $OS = "Linux" ]
then
	softs="pkg-config g++ moc-qt4 qmake lupdate lrelease make"
elif [ $OS = "Darwin" ]
then
	softs="pkg-config g++ moc qmake lupdate lrelease make"
fi

for soft in $softs
do
    path=$(which $soft)
    if [ $? = 1 ]
    then
        echo $soft missing !
        exit
    else
        echo $soft: $path        
    fi
done
echo 

echo "*********************************"
echo "* Checking development files... *"
echo "*********************************"

# Needed headers
#cxx_devs="iterator string vector sstream iostream stdexcept"
xml_devs="libxml++"

#cxx_version=$(g++ --version | sed -e "s/g++.*(.*) //" | grep -o -e "[0-9]\{1,\}\.[0-9]\{1,\}")
#cxx_dev_path="/usr/include/c++/$cxx_version"
#echo - C++ standard library: $cxx_dev_path
#for dev in $cxx_devs
#do
#    if [ -e "$cxx_dev_path/$dev" ]
#    then
#        echo $dev: OK
#    else
#        echo $dev missing !
#        exit
#    fi
#done

echo
if [ $OS = "Linux" ]
then
	lib_path="/usr/include/"
elif [ $OS = "Darwin" ]
then
	lib_path="/opt/local/include/"
fi
xml_dev_path=$(ls -l $lib_path | grep -o -e "libxml++-[0-9]\{1,\}\.[0-9]\{1,\}" | head -n 1)

for dev in $xml_devs
do
    if [ -e "$lib_path$xml_dev_path/libxml++/$dev.h" ]
    then
        echo $dev.h: OK
    else
        echo $dev.h missing !
        exit
    fi
done

echo
echo "********************************"
echo "* Preparing the compilation... *"
echo "********************************"

qmake -project
lupdate GM-Assistant.pro
lrelease GM-Assistant.pro
mv translations/*.qm .
qmake # -spec macx-g++

echo
echo "******************"
echo "* Adding Libs... *
echo "******************"

# adding libxml++ library includes in the Makefile
sed -i "" -e "s#-I\.#$(pkg-config $xml_dev_path --cflags-only-I)#" Makefile
if [ $OS = "Linux" ]
then
	sed -i "" -e "s#-lQtCore#-lQtCore $(pkg-config $xml_dev_path --libs) libs/api/lib/libfmodex64.so#" Makefile
elif [ $OS = "Darwin" ]
then
	sed -i "" -e "s#-lQtCore#-lQtCore $(pkg-config $xml_dev_path --libs) libfmodex.dylib#" Makefile
fi
# adding the -g flag if the debug option is enabled
if [ $debug = "true" ]
then
    sed -i  "s#-pipe#-pipe -g#" Makefile
fi

# cleaning previous compilation
make -s clean

echo
echo "********************"
echo "* Ready to compile *"
echo "********************"
echo To compile, type make
